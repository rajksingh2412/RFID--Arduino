#define SS_PIN 15 //D8
#define RST_PIN 5 //d1

#include <SPI.h>
#include <MFRC522.h>
#include <ESP8266WiFi.h>
const char* ssid     = "22";
const char* password = "wxyz7890";
const char* resource = "/trigger/lego/with/key/dTU66SOjW5SGecxE_RYh9msNvxOGggV9QJr5gFpp0Z9";
const char* server = "maker.ifttt.com";
MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance.
int statuss = 0;
int out = 0;
String content= "";
int usn=0;
String namee ="";
int sem=0;
String sec="";
int number=0;

void setup(){
    Serial.begin(115200);   // Initiate a serial communication
  SPI.begin();      // Initiate  SPI bus
  mfrc522.PCD_Init();   // Initiate MFRC522
  Serial.println();
 Serial.println();
 Serial.print("Connecting to ");
 Serial.println(ssid);
 WiFi.begin(ssid, password);

 while (WiFi.status() != WL_CONNECTED) {
 delay(500);
 Serial.print(".");
 }
 Serial.println("");
 Serial.println("WiFi connected");
 Serial.println("IP address: ");
 Serial.println(WiFi.localIP());

}

void loop(){
   // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }
  //Show UID on serial monitor
  Serial.println();
  Serial.print(" UID tag :");
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  content.toUpperCase();
  Serial.println();
   if (content.substring(1) == "C6 76 B3 1A") //change UID of the card that you want to give access
  {
    Serial.println(" Access Granted ");
    delay(1000);
    usn=741;
    namee="Raj Singh";
    sem=3;
    sec="D";
    number=9800568257;
    Serial.println();
    Serial.println(namee);
    Serial.println(usn);
    Serial.println(sem);
    Serial.println(sec);
    Serial.println(number);
    statuss = 1;
  }
    else if (content.substring(1) == "6D D3 4E D3") //change UID of the card that you want to give access
  {
    Serial.println(" Access Granted ");
    delay(1000);
    usn=738;
    namee="Prajwal Simpi";
    sem=3;
    sec="D";
    number=4000562085;
    Serial.println();
    Serial.println(namee);
    Serial.println(usn);
    Serial.println(sem);
    Serial.println(sec);
    Serial.println(number);
    
    statuss = 1;
  }
  
  else   {
    Serial.println(" Access Denied ");
    delay(3000);
  }
  Serial.print("Connecting to: "); 
  Serial.print(ssid);
  WiFi.begin(ssid, password);  

  int timeout = 10 * 4; // 10 seconds
  while(WiFi.status() != WL_CONNECTED  && (timeout-- > 0)) {
    delay(250);
    Serial.print(".");
  }
  Serial.println("");

  if(WiFi.status() != WL_CONNECTED) {
     Serial.println("Failed to connect, going back to sleep");
  }

  Serial.print("WiFi connected in: "); 
  Serial.print(millis());
  Serial.print(", IP address: "); 
  Serial.println(WiFi.localIP());

  Serial.print("Connecting to "); 
  Serial.print(server);
  
  WiFiClient client;
  int retries = 5;
  while(!!!client.connect(server, 80) && (retries-- > 0)) {
    Serial.print(".");
  }
  Serial.println();
  if(!!!client.connected()) {
    Serial.println("Failed to connect...");
  }

  Serial.print("Request resource: "); 
  Serial.println(resource);


  String jsonObject = String("{\"value1\":\"") + content + "\",\"value2\":\"" + usn 
                      + "\",\"value3\":\"" + namee + "\"}";
                      
                      
  client.println(String("POST ") + resource + " HTTP/1.1");
  client.println(String("Host: ") + server); 
  client.println("Connection: close\r\nContent-Type: application/json");
  client.print("Content-Length: ");
  client.println(jsonObject.length());
  client.println();
  client.println(jsonObject);
        
  timeout = 5 * 10; // 5 seconds             
  while(!!!client.available() && (timeout-- > 0)){
    delay(1000);
  }
  if(!!!client.available()) {
    Serial.println("No response...");
  }
  while(client.available()){
    Serial.write(client.read());
  }
  
  Serial.println("\nclosing connection");
  client.stop(); 
}
